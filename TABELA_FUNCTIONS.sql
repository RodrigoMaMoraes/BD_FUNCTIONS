-- CRIAÇÃO DA TABELA ALUNOS
CREATE TABLE ALUNOS (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    NOME_ALUNO VARCHAR(123) NOT NULL,
    DATA_NASC DATE,
    CURSO_ID INT,
    FOREIGN KEY (CURSO_ID) REFERENCES CURSOS(ID)
);

-- CRIAÇÃO DA TABELA CURSOS
CREATE TABLE CURSOS (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    NOME_CURSO VARCHAR(123) NOT NULL,
    AREA_ID INT,
    FOREIGN KEY (AREA_ID) REFERENCES AREAS(ID_AREA)
);

-- CRIAÇÃO DA TABELA AREAS
CREATE TABLE AREAS (
    ID_AREA INT AUTO_INCREMENT PRIMARY KEY,
    NOME_AREA VARCHAR(123) NOT NULL
);

-- PROCEDURE PARA INSERIR CURSOS
DELIMITER $$
CREATE PROCEDURE INSERCAOCURSOS(
    IN NOMECURSO VARCHAR(123),
    IN AREA_ID INT
)
BEGIN
    INSERT INTO CURSOS(NOME_CURSO, AREA_ID)
    VALUES (NOMECURSO, AREA_ID);
END$$
DELIMITER ;

-- CHAMADA DA PROCEDURE INSERCAOCURSOS
CALL INSERCAOCURSOS('INGLES', 1);

-- SELEÇÃO DE TODOS OS CURSOS
SELECT * FROM CURSOS;

-- PROCEDURE PARA SELECIONAR CURSOS POR ÁREA
DELIMITER $$
CREATE PROCEDURE SELCURSOAREA(
    IN AREAID INT
)
BEGIN
    SELECT CURSOS.ID AS CURSOID, NOME_CURSO AS NOMECURSO
    FROM CURSOS
    WHERE AREA_ID = AREAID;
END$$
DELIMITER ;

-- CHAMADA DA PROCEDURE SELCURSOAREA
CALL SELCURSOAREA(1);

-- ALTERAÇÕES NA TABELA ALUNOS
ALTER TABLE ALUNOS 
    ADD COLUMN SOBRENOME_ALUNO VARCHAR(123) NOT NULL;

ALTER TABLE ALUNOS
    ADD COLUMN EMAIL VARCHAR(123) NOT NULL;

-- FUNÇÃO PARA GERAR EMAIL DO ALUNO
DELIMITER $$
CREATE FUNCTION GEMAILALUNO(
    NOME_ALUNO VARCHAR(123),
    SOBRENOME_ALUNO VARCHAR(123)
)
RETURNS VARCHAR(123)
BEGIN
    SET @EMAIL = CONCAT(NOME_ALUNO, '.', SOBRENOME_ALUNO, '@GMAIL.COM');
    RETURN @EMAIL;
END $$
DELIMITER ;

-- CHAMADA DA FUNÇÃO GEMAILALUNO
SELECT GEMAILALUNO('ROGERIO', 'MATIAS');

-- PROCEDURE PARA INSERIR NOVO CURSO
DELIMITER $$
CREATE PROCEDURE INSERCAONOvOCURSO(
    IN NOMECURSO VARCHAR(123),
    IN AREAID INT,
    IN NOMEAREA VARCHAR(123)
)
BEGIN
    INSERT INTO CURSOS (NOME_CURSO, AREA_ID)
    VALUES (NOMECURSO, AREAID);
END$$
DELIMITER ;

-- CHAMADA DA PROCEDURE INSERCAONOvOCURSO
CALL INSERCAONOvOCURSO('RDC', 2, 'NOME_AREA');

-- FUNÇÃO PARA RETORNAR ID DO CURSO
DELIMITER $$
CREATE FUNCTION IDCURSO(
    NOMECURSO VARCHAR(123),
    NOMEAREA VARCHAR(123)
)
RETURNS INT
BEGIN
    DECLARE CURSOID INT;
    SELECT CURSOS.ID INTO CURSOID
    FROM CURSOS
    WHERE NOME_CURSO = NOMECURSO AND AREA_ID = (SELECT ID_AREA FROM AREAS WHERE NOME_AREA = NOMEAREA);
    RETURN CURSOID;
END$$
DELIMITER ;

-- CHAMADA DA FUNÇÃO IDCURSO
SELECT IDCURSO('INGLES', 'RDC');

-- SELEÇÃO DE TODOS OS CURSOS
SELECT * FROM CURSOS;

-- DROP DA FUNÇÃO IDCURSO
DROP FUNCTION IDCURSO;

-- CHAMADA DA FUNÇÃO IDCURSO APÓS O DROP
SELECT IDCURSO('INGLES', 'RDC');

-- PROCEDURE PARA MATRICULAR ALUNO EM CURSO
DELIMITER $$
CREATE PROCEDURE MATRICULARALUNOCURSO(
    IN NOME_ALUNO VARCHAR(123),
    IN DATA_NASCIMENTO DATE,
    IN NOME_CURSO VARCHAR(123),
    IN NOME_AREA VARCHAR(123)
)
BEGIN
    INSERT INTO ALUNOS (NOME_ALUNO, DATA_NASC)
    VALUES (NOME_ALUNO, DATA_NASCIMENTO)
    ON DUPLICATE KEY UPDATE ID = ID;

    INSERT INTO MATRICULAS (ALUNO.ID, CURSO_ID, DATA_MATRICULA)
    SELECT A.ID_ALUNO, C.ID_CURSO, CURDATE()
    FROM ALUNOS A
    JOIN CURSOS C ON C.NOME_CURSO = NOME_CURSO
    JOIN AREAS AR ON AR.NOME_AREA = NOME_AREA
    WHERE A.NOME_ALUNO = NOME_ALUNO
    AND A.DATA_NASC = DATA_NASCIMENTO
    AND C.AREA_ID = AR.ID_AREA
    ON DUPLICATE KEY UPDATE ALUNO_ID = ALUNO_ID;
END$$
DELIMITER ;

-- CHAMADA DA PROCEDURE MATRICULARALUNOCURSO
SELECT MATRICULARALUNOCURSO('ROGERIO', '2024-04-07', 'INGLES', 'RDC');

-- PROCEDURE PARA MATRICULAR ALUNO EM CURSO (COM INSERT IGNORE)
DELIMITER $$
CREATE PROCEDURE MATRICULARALUNOEMCURSO(
    IN NOME_ALUNO VARCHAR(123),
    IN DATA_NASCIMENTO DATE,
    IN NOME_CURSO VARCHAR(123),
    IN NOME_AREA VARCHAR(123)
)
BEGIN
    INSERT INTO ALUNOS (NOME_ALUNO, DATA_NASCIMENTO)
    VALUES (NOME_ALUNO, DATA_NASCIMENTO)
    ON DUPLICATE KEY UPDATE ID_ALUNO = LAST_INSERT_ID(ID_ALUNO);

    INSERT IGNORE INTO MATRICULAS (ALUNO_ID, CURSO_ID, DATA_MATRICULA)
    SELECT A.ID_ALUNO, C.ID_CURSO, CURDATE()
    FROM ALUNOS A
    JOIN CURSOS C ON C.NOME_CURSO = NOME_CURSO
    JOIN AREAS AR ON AR.NOME_AREA = NOME_AREA
    WHERE A.NOME_ALUNO = NOME_ALUNO
    AND A.DATA_NASCIMENTO = DATA_NASCIMENTO
    AND C.AREA_ID = AR.ID_AREA;
END$$

DELIMITER ;
